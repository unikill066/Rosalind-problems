# sample_string = "GCAGAUGGCCAUGGCGCCCAGAACUGAGAUCAAUAGUACCCGUAUUAACGGGUGGCTCAG"

sample_string = "AUGCUGGGUCUGCUCAUUCAGUCUCGGGACGAUGACGGAAUAAGGCCGCCAUACUAUGGAAGAUUUUGUUCUCGGAGAAGGUCGGAAGGCGGCAACGGUGAUUACCAUCACACAAAUAAUUAUAUUAUAAAGCGCCUGAGAUGGCUCCUUGCUCCGGGUGAUCACUGCGCACGGCUAUCACGAGUAGACCUCCUAGAGUCACGAUAUUGUUCUACAUACCGACCUCGGAUCGUUCCUCCAGUUAUCACGGCCGGUGUAAGGGUGACAGUUUCUUUAGAUCGCGGACACAUACUGAUACUUGCCACCUAUCCAGGCUCGCCUUCCGCUCUACUGGUCUCAAGAUCUAGAGUAUGCUUACACCUGGAUAGUUCGUAUAUUGGAAUUAAUGGGACACCGCGAAGAAGGCCCGCGGAGUCAUCGAUACUCGUUGAUUUUCGCACGCUAAGACACGCGAGGCCAUCAAUUACCGCGGGAAUGACGGCACCGAUCAGUCUGUCCCGUGUGCUGGACACGGAUAGACAGCAUCGAAUCACUAUCGAGACGACCUCGGGAUUUUUUUCAAAAGUAUAUUGCUCUUCGCGAGGAAAUCAGGCGGGCCUAAACUUGUGUUCUGCCCAGGAUAUCCAGGUUUCUUAUGGCACGGCUGACAGGCCCUGUCGAGGUGUUCUGUACGCUUUUGUAUCGACCUACCUCGCCGUCAACUUCCGGCCUAUCGAAUCAAUGUCUACCCCCCGGAAAGUAAUGCUGAAGUCGGUCUUAAGGCUGCUAGGUUGUAGGAUCGCUGUAUAUGAUGACCACGAGCCUGAUUUACCGGGAGUGUAUCCGGCCCACUUCCUGAAAGACGCGCCAGCACCGCAGAGUUAUCAUACACACGCGUAUUGGUACCCGGCGGAGGCCGAUAGCUCUCCCAAAUCAGAAAUAACCAAGGCUCGGACGGUAGUCAAAUGUGCUAUGCCUGUCAAUCGCCAUCUCGCUUGUCGUGAAGCAUAUGUCCUGAUUACCAACUCGAUUCGCGAAUGCAGCUACAGCCGACCGUUAAUCGCCAACGCGUAUAGAGAAGCGACGUGCGCCUUGUCGUUUCACUCACCUCUCCUUCGGAUUUGGGAACCCCUGGUCCGGGGGGCAUUGCGUCUUGGUCGUAACGCCGAUCGUUCGGUGCCCCUAUAUAAGCUACGACUUAGAGGAAGGAGGGUGGAAAACUCCGACGGUGACAAGCUAACUUGUAAGCUCACCGUUAUGAGUCGGAGCGGUGCGUCUCUCGCAUUCAGCCGGGAUAAGAGGAUUUCGAAUGACUAUGACGCGGGAAGCAUAGAAGUAAGUCGCUCACGAAAUUCAGAUUACUUACUCGCGUAUCAACACCUAGAUUUCAGACUAGAGUGUGCGCCUCCUUUAGGGAGUCAAUACGACCAAGCAAUUAGCUCUCACCGUUUCAGCCAUGGUUCUACCUCGUGGGCAGCUGGUUUGCACCGAAAUCCGUAUCAAGGUGGACUCAAUGCUUGGUUCUAUUUCUGGGUGGGGUCUUCGCCUCACUGCAGCCAUGAGCACUGGCCAAAAAGUAACAUGAGAUAUUAUAAGGGGUUGGGAGGUCAUUCAAUACUAGCGAUCUGUUUACCGACUGUAGUUCUUAACUUCAGUGCGUUCUAUAAGAGUAUCGACGACUCCUUAGGACGAAGCUUUGGUGUAGCCGCGCGACAGGUUACACAGGGUUGGCUCCGAGCGCCAAUCUCGAUGGCGGUUCCGGAAGUUCAGUUAACUAGCAGAGCCAUGACGAUAAUGUUCCUGGCGUUUGACGGGGGUGGAGACGAAAUUACCCAAGAUCCUUCUUGGAUGUUGUCGAUGAACACUGUACUUGGUCAAUACUUGUCGCUAAGAUGCCUUUUUAUAUACCAAAGCCUUGCGGUACGGAAGGGACGCGGGAUUUUGUUACUUAUUGGGCAAACGCGUAACACGGCCCGUGCUUUUGCUAGCAGUAGCCGUACGCAGUGUACGCAUACGGUAUGGGACUGGGCUCGGCAACAACUGGAACCAGGACACCGGUAUCUAGACGGCUCGACCCGGGGUACAUUUAUUAUUCCCUACGAAAGUAGACAAUACGUAGACACCCUGAGUGCCAUCUCGCAUGGAUCUGGCCACCUAUCCGUUUUUGCCGAGAUUAACUACUGCCUGCGAAGCAACCCUGCUGACGGUUUAGCGGCUGUCAUCGUCACCCCCGGCACUUGGUGGGGGCUAUUACUUAGGCAGAGACCAAAUAGGGGCAAUAGGCUUCCAACGUACAAUUAUCACGGUAGGUCCGAGUUCUUUGAGCAAUGCGGAAUAUAUGUGUUCGGAUCAGGCGUUGCGUCCCAUGUAUGGUUAGAUAAAAAGAGACACACUAGGACAUCUGAGGGGCGAUGUAACGUAUCGAGCCACCUCACACCUUGUUGUGGCCCGCUAGGGAGUUUCGGAUGGCAAAUUUUCUUCAUAAUAAUAUUGUCUACUGUUAGCGUAGCGGCAUACCUCAUCUGGGCUAGGCAAGAAUUCAAAUACCACUCUUUCCUAGAGUUGGGAGGUGAUUCGACUCAGCGGGUGCAACGGCGGCGGAGAUUAGACUGCAGCAUAGCCGCGCUAUUCCCCUUGUAUCCACUUACGGCCAGACUCAACGGUCGUUUAGGUUGGACUUGCACCCGGAUUAUGCUUGUUAGACCCUGCAUACACUGCAACAGUAACGAUGGAGUGCACCGUUUACAUGCGAUUAGCGAUAUAUCUGACGGAAACCCCCUGACCCCCUAUCAGUACCCUGUGGAUUUGCACUUUCUAGAGCAUCAAUGGUUUUGUCGAAGUCGAUAUGUCGGACUAUCAAGCCCUACUUCUGGACACGGCUACCUAAAUCUUCCUCUCUUGCACGAUCGCUACCUAUUUCUCCAGCCUACAGGGAACCGCGGUACCUCUCCUGUACUGUCGCCGUUGAAUACUACAGUAAGUCAGGAUUAUAGUACCAGCGACGUUCCUUCGAGUCCACGGAAAUGGGUCUGGGACUAUCUGUGCCUGAUGAUUCGAAAUGUUGACUUAACUCAUGUAUCGCAACCAAUCCCAAUGAGGUGGCCAGGACCCUACGUCGGUAUUAAUCUAUGGGACCAACCUGGUCGAGGCAUAACCUCGCGGGGCUGGGGUGGUGAAAGGGGCGGAACGGUCCAUUUUUUAUCUGUCUUUUGGACCCUGGAGGUACUAGAGAUAUUCGAGGCACCUUGGUGGGCUGCACCCCAAAGGCAUGUGUCUGGCGCAAAGUCACAAGAUGGGAAUCCGGACGAACUCUGUUGGGUGAACGCCCCUACGGAGAAGAAGUAUGGCCGCGUUAAUGUAGAACUGCGUUCGCGGUUUCGUCCUGCCGUGUCUCAUAUGCAGCCAUUACUACCGAAUUCGGUGUCAACCAGAGUGGCGGUGAGAACAUUAGAGCAUUCCUCUCCCGCGUACGCGAGUUCCUUGGUGAUCGACGGAUCUUCUAAUUUUGGGGACUAUUCUGACUGGCACCUGGAUAGCUAUUGUGUAUCUUUACCGCACAGCGAGUUUAGCAUGUCAAAACGGCGCAGGACAGCGGGUUCCAAGUCUGAUUUGGCCGCCUGUCCUCUUGUCCGGGAAUCACGGAGCCUGCUUACUGACCCCAUUUUUAUGAGGCUCGCGUCCCCAGGCUAUAUAUACACGGAACACGGAGCGCUUUCGCCAUUGACUUCGCUAUGGGUUAGAAAAGGUUUUCACUCCAAAGCACUUAUUCGUAAUGCUCUCGGGGUUAAUUGGUCGUAUGGAAACCCAGGUAAAACUCUUACUAGUCCGUUGAGGUUGCCCGCAACUAAUUGGGUUAUUAACUUUCUACCGUCGGAGUCGCAUACGCGGUGUCCUCAUACAACGGGGAUGUUCCCGGUGCGUGAACAGCACGUUCAGCCGACGCGUCAGAAACUGUGCAUCAUGUUAAACAUGGUAAAAAAUGGGGUGGCAAAAAUAAUUAAGUGCGAGGGCCAGCCUAUCGGACUUCUACGAAAUUUUUUUUCGUUGGGUAGGGUACGACAGACGGUGCAAGGGCUCUAUUAUAAGACCUCUUCUGGGGCGCGUUGCGUGUUAGCCAAGGUACGACUUAUUUACGAAGUGAUUGUGACGGAUUCGCCUUCGUCAGGACAGAGUCGUUACUCAAGAGAAUUCCAGGUUUUAACUCACACCUCCGUCUGGUGGUCGCGGUCAACGAUAUGUCUUUCUGUAUUUCACCUGACGGAUACACCAACCAAUCAUGUGAUCGCAUAUACGGAUAGUGAAUUGGUGCACCCGCGAGCGCACCGAGUGACGCUUGCACAAGAGAUGUUUUUCCUUGAAGUUUAUGCUUCGGGCCUGGUGUACUGUAACGAUCAUGAAUCCCGGCACGUGGAUAACAGGAAUCGAAGCGGGGGGUACUAUUUGUCAAUUUGUGCCACCAUUGCUUCUAUGGGGUUCCUGUGCCCUUUGCACCUACAUCGUUCCUUUUCUAGCAAAUCGUUAUUUCGGCGGAGUGUAACAAGGACGAAACUGGGGCAAGCACGCUGGGGAGUGCGUGAUAUCGUCAGAUUUUCAGCCCUAGUACCUCACAAUUCGUAUCCGAGACUUGGUGGCGACCGCAUCAUCGACCCUGCGCAAGAAAUCAACCGGGAGGGCCACCACUUUUCGCUUUUAAUGGGGAUUUUGAGCGACACGCUGUCUCGUCACAUGGGCCCGCGGAGAAGUGUUCAUCCAGUGGUCACUCUCUGCCGGCCCAAUGUAUCAUGGAGUGUCUCCUAUGUUGACUUAGUGAAUGCAAGCUAUCAGCUAUGCGCUAGUAGCGGCACUAAUACAGGGCCGUGUACUGCUACUCGAGCGGCGACUAGACGUGUCAAUGUCACUGGGCUGUGUACGUGCAUUGAGAGAGACGUAACGCUUAGUAUACCUUACAAAUGCAAUCGGCUUGUGAUGUGGGGUUUUGCUGACAUUUGCGCGCUUGAGAAUAACUCAAUGAGCGGAUCUUCAAAGCAACACAAUAGUCCUGUAAACUACUCUGUCACGGUAUUUAACUGGGAGCUGUACAGUCUUUGGAUUCAAAGAGGCCGUAGAUUCGCUAUACCCGGUAUUGGCAUGCACGAAGGUUAUAGGUCUCCUUUAAUUUGCGCUUCGAUAUUAUGGGCGAACAGCUUCUUGUCAGGGCUCGUAGUUUAUGAAGGUCUAGUCUCCCGGGGUGAGAGUCUAGAUUACGCGUCACUAAAUGCACGUAGAGACAUGCGUUGGUAUUGUGCCUUGCGACGACCUUCAAUUGUUAGUCUAGAGGUCUCCAUAGCUCUCCAUCAUUACUGCGCGCUUCCGCCGAUGCUCAGUGAUCAGGUUGGCAAGCAACUUCCUAGCCAUGCAUCGAGGUACCCGAACAUUAUCUAUUUGUUCUUAGUUCUCCUUACUGUAUUGCAAGACGAAGGAUUAGAAUUUACAAAAUGGUGUUGCGAAAAAAACAUGAGGCGUCUUGAAGUUGCGCGGGCCGGUGCUAUAAUGCACGCCCCCGGAUUCUCCUGGGGCUCCCCGUGCGUUAUCAUGGGAAUCGUACUACUCUGCGUUUGGCUGGAAACCCGGUCAAAUGAGGUGUUAACGCCGGUCUUGAACUUUGCAGUUCAGCUAUUAACAGGAUCAAGAGUGCUUCCUCACAAUUACGCCAGGCCUAGACCUCAAUCUUGGCGCACAUGUCGUGUUUUUGUCGUAUCACUGAAGUCCCACAUGUUAGUGAUAAGUUUCAGUACACUGAAGAUCCCUGAACUACGUAUGAUUCAGAUCGCGGUCCCCGGUGAUUCAUUGCCGCAAUUUUUACGACAAUUAGCGUUGUUUAACCAGGUUAGUCGUAGUAGAUCGGCGACGUCAAACUGUUGUAGUAAACUUUCCCGCGGCCUUAUUAACCUCUAUAUGGGGAGAGCUACGGACCAGAAGACAUUGCCAUUUUCAAAAGUACCAACCAUGAAAGUAGGCACACGCGACGCUUGCGCCUGCCCUGACACGGACGAGUGUGGGACGAGCAACUUUACACCAAUGAGUUCCACUGGUGCCCGGGGGAAAAGAAAUUUGAAUAAGGCUAAUUCCCGCAACGGUAUGCCUCAAUCGAGUGAUCCUUUACGUUGGCUCAGAGUAAAUCGAGUUCGGACCCGGGUGCCCGAUUUGCCCCCGCGGCAAGUGGGUAAAUUCCCAGGGGCGGGAACCAAAGGUAUUGGUAACUCCGUGAGUACUAUAAUUGGUCAGGCCCAGGAGCUACCGUUCAUGAGGAAAGGUCAGCUUCCGCUGAAAUGUCCAAGGUUGGCGUCGUGGUACUAUCUGACACCGAAGAGGUCAAGCUUACGUUAUGCGCUUUGUUAUCGUUUGUGCCCCAGUCAUAAGAUCGUGGCCCGGUACUCAUCAAUAACUCGACCUGUAUCCCAGGCGUGGCUGUCUAUCCCAAUUCAGAAAAUGGGGACCUAUAUGCUACGGAAUUCCAAAUCUAGGUAUGGACAUUUCAUCCUAAUAUGUUACCGAAGCUUUGACACACGAGAAAAGCGGCGCGCCACAUUUCGGAUUCUAAGGAAAGGAAUCUCCAUGCGGGGCGUGAACGUCGAACCAAUAUGGAUCGCGGAAUUGCGUUCUCCAUCCACAGCAUUACGGUUUGUACAUCCGGCUAAGCCAGAUCUGGUAUGGUCCUAUGGAACUUCAGAAUGUAUUGGAUCGAGCAAGAAAAUAUAUAUGCCUGGCGUGAAAAUGCUGAAGCUGGCGGCUGAAACAUUGCCCAUGAAUUCCUCCCUUUCAAUCGAUGGAAUGCACACGGCCUUCAAGCACUGCUGUUCAUGUCGUAUGGCCAGGUGUAUGGCGGAAUUUGGCGACCAACUUACAGGCGUUCAUCGAUCCUUGACAAAUGGAUCCAGAAUGAAUAAUUGUCCGAUCAGUCAGUGGGGUUUGUGUGAGACUGGCAGCCUAUCCCCACUCGCGCAUCGGCAUGGUAUACGGAUUGCGGGGCAAUCCCCACAGGUCACAGGGACGAUACCAGGUAACAACCGUCGCCAACUAACUUUCUUGCGCGCAACCUACCCCUUCCUCGCCCUAGAACCCUUUGCCCGGAGCUUACUGAGCACCGAGUGGACGCCAAGUUUUCUCCAGCAUGCCCCCAGACUAUGUAUAACCCGACGCAUAUUAACGAAACUAGAUUCCCGGUCACUCAAGAAGGAUCUCGCGCCUAAAGACGGUCUAGGACUCUACUCCCAUCGACCGGAUCCCGCAUUCCACACACGAGUGAACUCGACCUCAUGUGGAUCCAUCCAGCGCCAACCAGGUCGUCUGAUGCCCAGCCAGAGAGCUUCUAGGCGUGCCGACCACACUGGGCACCCUAUGCGCUCACAGUUAUUACGAUUACCGAUAAUUCCAACUCCAGUAAACCUUCACUCUUUUGUCAGACGCAACUGUACCGGUGAAUCUAGCGGUCGCCUGACAUUUCGUCAACAACCAAGUAGUGUUUAUCUAAAUCGAAAUCCAGGCUAUUGCCUGCGGGACUCCAUCUCAACGUCACCAAAGCUCUGCAGUCGACACUGCUUUGAAGGGGUACGGGUGAAGUCUGAAUUAGAUAGUUGCAUCGAAGCUAAAGGUUCCGGAUUGGGUCACAAUAAGGCUACGCUUAAAAACUGCCGUUGGCAUCACAAUGGACGAGUACUGGGAGACUUGAGUAGAUUCUACGUUAUGGUUCUGCCGAGAAUCUGUGUAACCAAUCCCUUGGAAACGUACCCGAACUUAAAGUUAGUGGCGUGGAUAGAUUCUAGGUUGACUGAAGUACAAUCACAAUCUACAACUCUGCCACUUCGUUCAGAGUGCGCACAAAUUCGCCCCCGUAUCGGUGUUGGGGAAACCAACGCAGAGGCGCGUGGUUCUCACUCCAACCUAAAGAUACAAUCGCCAGUCUCACCCUGCCCAUACGUCCGUAGGGCCUUCCCGUCCGCCGCUCCGAGAACGGUUAAGAAUGGCUCAGCAUAUGAAGUACUACGUGUUCUCAGCGACCGAUCCAUGGGCCACCUGUUGACCCAGGGCUACUGGAUGAGUUUUAUUAUGUUUCAUUCCAUGCGAACUCGAGCAGUCGGCGCCCAUUGCCGUCUUCCCGACAGAAUGGUGAUGAUGACGGCGAGCAGUAAUUUGGAUAGUGGUCUCCACAGCCCGGAACGACUUGCCGAUUACAGGCCAGUGGUAGACCACUCCCCAGCUGUGCAAUUGCAUGCAGGAGAAGGAGCAUAUACGGUCUCCGUGUGGCAUAUUAGCGGCACUUCCUGGCGUAGGAUAUGCGUCUCGGAGCUUGGCUCCGUGAACUGGCGCUUUAGCAUGGAAAGUUCGACUCGGACCGCCCCCUCAUUUUGGUUCGGCUCGACAAUCGGCUCGAGGGGUUGUAUUUUCGCGCUCCAAGUACGGGAAACAAAUUUGCUGAAAUCAGACAGUAACAGUGGUGCAAGACCCCGAGGAUACGUCACGCCGUGCCCUCGUAUUCACUCUGGUUCGGCGAAUAGUGUGCCCACCCCCCGAGGCGGUAGCAUUGAACAUCUCUCCGAUAGUACUCCUCCCAACGAGGCGGUUGGAAACGGGGACAUUCAGCGAAGGCUGGGAGAGCCAACUGGUCGUCUGCUAAGCCUUCGCCUUAGCUUGGUUACCCACGUUCUGGUCAAACCAUUGAGAAUAUUGCUCGCGGUAGUAGUGAUCCUUCUGGGUCACGAGGCUUUACCCAACGAUACACUAUUAUCGAAUUCAAUGGUAGCGUCAGCUUGCCCUUUGAAGUAUGAGGAGUUGGAGUUAACCCCCUAUCUAUCUCCUGUCUUACUGCCGGCCAUAUGUAUUCUGUAUUGUAGGUUUAUCAUGCCUCACAAAUCCUACAAGAUAGUCCCCAGAUCAGAUGUCCACGAGAGAAAGAUAUGGACACCGUCCAUUUAUGCGGCUUUCGAGAUAGGCUGUGGACGCAUUAUCCCCACGGUCCGUUUCGGGCCUUUCGCCGAAGCAGCAGGGUUGUGCUUCAGAGUGACUUUGGAUCAGUGCCGCUCGACGUACUCGUCACGAAAUAGUGGUAGACAAAGAUGUAAAGGACCAACUGGUGCUAAGGGUUAUUUCCGAGUACACCGCACUAAUUCCUGCAACCAAAUGCCCGACACGAUAAAAGCAGAUCUCAAAGUGGCAGGAGUACGCCUAUCUUACAUGAUAGGCUCAACGAUAAAUAUCCGGGUGCAGAAUAAAGAGUAUCAGAUGGUGACGGGAGUACCCGAUCGUUUAACUAAUAUUUUCGGUCGACGGCAGCGGCCAACCGCCGCCUGGAAUCACCGUCACCGGAAAUCGGGAAGGGUUCGAUGGAGUCUCUUCGCGAGCGGGAGCUUGUAUUAA"

count = sample_string.count("U")
sample_string = sample_string.replace("U", "T", count)

for i in range(0, len(sample_string)):
  if sample_string[i:].startswith("ATG"):
    temp_string = sample_string[i:]
  if temp_string.endswith("TAA") or temp_string.endswith("ATG") or temp_string.endswith("TGA"):
    pass
  else:
    for i in range(0, len(temp_string)):
      if temp_string[0:i].endswith("TAA"): temp_string = temp_string[0:i]
      elif temp_string[0:i].endswith("TGA"): temp_string = temp_string[0:i]
      elif temp_string[0:i].endswith("TAG"): temp_string = temp_string[0:i]
      else: pass

print(temp_string)

# fetching the DNA to Protein reference table
import pandas as pd

df = pd.read_html("https://teaching.healthtech.dtu.dk/22110/index.php/Codon_list")

amino_acid_list = df[0]['SLC']
array_of_codons = df[0]['DNA codons']
array_of_codons = [i.split(',') for i in array_of_codons]

amino_dict = dict()

for i, j in zip(amino_acid_list, array_of_codons):
  amino_dict[i] = j

amino_dict = dict()

for i in range(0, len(array_of_codons)):
  for j in array_of_codons[i]:
    amino_dict[j.strip()] = str(amino_acid_list[i])

# Testing
print(amino_dict['ATG'])

codon_list, n = list(), len(temp_string)
while n>=0:
  codon_list.append(n)
  n = n - 3
codon_list

protein_list = list()

for i in range(0, len(codon_list)-1):
  if not amino_dict[temp_string[codon_list[i+1]: codon_list[i]]] == "Stop":
    protein_list.append(amino_dict[temp_string[codon_list[i+1]: codon_list[i]]])
"".join(protein_list)[::-1]